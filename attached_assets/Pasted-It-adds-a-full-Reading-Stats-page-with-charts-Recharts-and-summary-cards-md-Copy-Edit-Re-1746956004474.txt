It adds a full Reading Stats page with charts (Recharts) and summary cards.

md
Copy
Edit
### üõ†Ô∏è Replit AI Task ‚Äî Implement ‚ÄúReading Stats‚Äù Page

**Features**
1. `/reading-stats` route renders a dashboard of:
   * Rating distribution pie
   * Pages per book histogram
   * Reading pace cards (books/yr, books/mo, pages/day)
   * Longest & shortest book call-outs
2. Data comes from `stats` in `ReadingDataContext`.
3. Responsive Tailwind layout.

---

## 1 ‚ñ™Ô∏è Create `client/src/pages/ReadingStats.jsx`

```jsx
import React, { useContext } from 'react';
import ReadingDataContext from '../context/ReadingDataContext';
import { PieChart, Pie, Cell, Tooltip, BarChart, Bar, XAxis, YAxis, ResponsiveContainer } from 'recharts';

const COLORS = ['#34d399', '#60a5fa', '#fbbf24', '#f87171', '#a78bfa'];

export default function ReadingStats() {
  const { stats } = useContext(ReadingDataContext);
  const ratingData = Object.entries(stats.ratingDistribution || {}).map(([star, count]) => ({
    name: `${star}‚òÖ`,
    value: count
  }));
  const pageData = (stats.readingData || []).map(b => ({ pages: b.pages || 0 }));

  const pace = stats.readingPace || { booksPerYear: 0, booksPerMonth: 0, pagesPerDay: 0 };
  const pageStats = stats.pageStats || { averageLength: 0, longestBook: {}, shortestBook: {} };

  return (
    <div className="p-6 space-y-8">
      <h2 className="text-3xl font-semibold">Reading Stats</h2>

      {/* Pace cards */}
      <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
        <Card title="Books / Year" value={pace.booksPerYear} />
        <Card title="Books / Month" value={pace.booksPerMonth} />
        <Card title="Pages / Day" value={pace.pagesPerDay} />
      </div>

      {/* Rating distribution & pages histogram */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <div className="bg-white rounded-xl shadow p-4">
          <h3 className="font-medium mb-4">Rating Distribution</h3>
          {ratingData.every(d => d.value === 0) ? (
            <p>No rating data.</p>
          ) : (
            <ResponsiveContainer width="100%" height={240}>
              <PieChart>
                <Pie data={ratingData} dataKey="value" nameKey="name" outerRadius={100} label>
                  {ratingData.map((_, i) => (
                    <Cell key={i} fill={COLORS[i % COLORS.length]} />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
          )}
        </div>

        <div className="bg-white rounded-xl shadow p-4">
          <h3 className="font-medium mb-4">Pages per Book</h3>
          {pageData.length === 0 ? (
            <p>No page data.</p>
          ) : (
            <ResponsiveContainer width="100%" height={240}>
              <BarChart data={pageData}>
                <XAxis dataKey="pages" hide />
                <YAxis />
                <Bar dataKey="pages">
                  {pageData.map((_, i) => (
                    <Cell key={i} fill="#60a5fa" />
                  ))}
                </Bar>
                <Tooltip />
              </BarChart>
            </ResponsiveContainer>
          )}
        </div>
      </div>

      {/* Longest / shortest book */}
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <BookHighlight
          title="Longest Book"
          book={pageStats.longestBook}
          color="bg-purple-100 text-purple-800"
        />
        <BookHighlight
          title="Shortest Book"
          book={pageStats.shortestBook}
          color="bg-pink-100 text-pink-800"
        />
      </div>
    </div>
  );
}

function Card({ title, value }) {
  return (
    <div className="bg-white rounded-xl shadow p-4 flex flex-col items-center">
      <span className="text-sm text-gray-500">{title}</span>
      <span className="text-2xl font-semibold">{value || 0}</span>
    </div>
  );
}

function BookHighlight({ title, book, color }) {
  if (!book || !book.title) return null;
  return (
    <div className={`rounded-xl shadow p-4 ${color}`}>
      <h4 className="font-medium mb-1">{title}</h4>
      <p className="truncate">{book.title}</p>
      <p className="text-sm">
        {book.pages || '?'} pages {book.author && `¬∑ ${book.author}`}
      </p>
    </div>
  );
}
2 ‚ñ™Ô∏è Register the route
File: client/src/App.js

diff
Copy
Edit
+import ReadingStats from './pages/ReadingStats';

  <Routes>
    ‚Ä¶
+    <Route path="/reading-stats" element={<ReadingStats />} />
  </Routes>
(Sidebar link already points to /reading-stats; no change needed.)

